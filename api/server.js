const express = require('express');
const bodyParser = require('body-parser');
const cors = require('cors');

// --- –ò–ú–ü–û–†–¢–´ –ù–ê–®–ï–ô –õ–û–ì–ò–ö–ò ---
const prisma = require('./prismaClient'); // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç Prisma
const authRoutes = require('./src/routes/authRoutes'); // –†–æ—É—Ç—ã –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const userRoutes = require('./src/routes/userRoutes'); // <-- –ù–û–í–´–ô –ò–ú–ü–û–†–¢: –†–æ—É—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const telegramBot = require('./src/bots/telegramBot'); // –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ (–µ—Å–ª–∏ –æ–Ω —Ç—É—Ç –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è)

const app = express();
const PORT = process.env.PORT || 3000;
const FRONTEND_URL = process.env.FRONTEND_URL || 'https://hash-spin.vercel.app';

// --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø CORS (–ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û) ---
const allowedOrigins = [
    'https://hash-spin.vercel.app', // –í–∞—à –ø—É–±–ª–∏—á–Ω—ã–π –¥–æ–º–µ–Ω —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
    'https://web.telegram.org',
    'https://t.me',
    // üí° –î–æ–±–∞–≤–ª—è–µ–º Ngrok –¥–ª—è —Ä–∞–±–æ—Ç—ã –≤–æ –≤—Ä–µ–º—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
    'https://bullheadedly-mobilizable-paulene.ngrok-free.dev',
    // –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
    'http://localhost:5173', 
];

app.use(cors({
    origin: (origin, callback) => {
        // –†–∞–∑—Ä–µ—à–∞–µ–º –∑–∞–ø—Ä–æ—Å—ã –±–µ–∑ Origin (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä—è–º—ã–µ –∑–∞–ø—Ä–æ—Å—ã —á–µ—Ä–µ–∑ curl/Postman –∏–ª–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ)
        if (!origin) return callback(null, true);

        // –†–∞–∑—Ä–µ—à–∞–µ–º, –µ—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ
        if (allowedOrigins.includes(origin) || allowedOrigins.some(ao => origin.includes(ao.replace(/https?:\/\//, '')))) {
            callback(null, true);
        } else {
            // –ï—Å–ª–∏ –¥–æ–º–µ–Ω –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω - –æ—Ç–∫–ª–æ–Ω—è–µ–º –∏ –ª–æ–≥–∏—Ä—É–µ–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
            console.error(`‚ùå CORS blocked request from unallowed origin: ${origin}`);
            callback(new Error('Not allowed by CORS'), false);
        }
    },
    methods: ['GET', 'POST', 'PUT', 'DELETE'],
    credentials: true // –í–∞–∂–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (JWT)
}));

app.use(bodyParser.json());

// --- –†–û–£–¢–ò–ù–ì ---
app.get('/', (req, res) => {
    res.send(`Casino API is running on port ${PORT}. Frontend URL: ${FRONTEND_URL}`);
});

// –†–æ—É—Ç—ã –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: /api/v1/auth/* (–ª–æ–≥–∏–Ω, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è)
app.use('/api/v1/auth', authRoutes);

// –†–æ—É—Ç—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: /api/v1/user/* (–ø—Ä–æ—Ñ–∏–ª—å, —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞)
app.use('/api/v1/user', userRoutes); // <-- –î–û–ë–ê–í–õ–ï–ù–û

// --- –ó–ê–ü–£–°–ö –°–ï–†–í–ï–†–ê ---
async function startServer() {
    try {
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
        await prisma.$connect();
        console.log('‚úÖ Connected to PostgreSQL database successfully.');

        // –ó–∞–ø—É—Å–∫ Telegram-–±–æ—Ç–∞ 
        if (telegramBot && telegramBot.start) {
            telegramBot.start();
        }

        app.listen(PORT, () => {
            console.log(`‚ö°Ô∏è Express server listening at http://localhost:${PORT}`);
        });
    } catch (error) {
        console.error('‚ùå Database connection or server start failed:', error);
        process.exit(1);
    }
}

startServer();
