generator client {
  provider = "prisma-client-js"
}

// üêò –ù–∞—à –≤—ã–±–æ—Ä: PostgreSQL –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// ====================================================
// 0. –°–ü–†–ê–í–û–ß–ù–ò–ö–ò (TOKENS, ENUMS)
// ====================================================

// --- –ö—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã (–¢–æ–∫–µ–Ω—ã) ---
model CryptoToken {
  id              Int       @id @default(autoincrement())
  
  // –ù–∞–ø—Ä–∏–º–µ—Ä, 'BTC', 'ETH', 'USDT'
  symbol          String    @unique
  name            String
  // –°–µ—Ç—å: 'ERC-20', 'BEP-20', 'TRC-20'
  network         String    @default("ERC-20") 
  
  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–Ω–∞–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–ø—è—Ç–æ–π (–¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ä–∞—Å—á–µ—Ç–æ–≤)
  decimals        Int
  
  createdAt       DateTime  @default(now())

  // –°–≤—è–∑–∏
  balances        Balance[]
  transactions    Transaction[]
  bets            Bet[]
  leaderboard     LeaderboardEntry[]
  userBonuses     UserBonus[]
  referralCommissions ReferralTransaction[]
}

// --- –¢–∏–ø—ã –ò–≥—Ä ---
enum GameType {
  SLOT
  ROULETTE
  BLACKJACK
  CRASH
  LIVE_DEALER
}

// --- –¢–∏–ø—ã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–í–∫–ª—é—á–∞—è –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ) ---
enum TransactionType {
  DEPOSIT   // –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞
  WITHDRAW  // –í—ã–≤–æ–¥ –Ω–∞ –≤–Ω–µ—à–Ω–∏–π –∫–æ—à–µ–ª–µ–∫
  BONUS     // –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ–Ω—É—Å–∞
  REFUND    // –í–æ–∑–≤—Ä–∞—Ç —Å—Ä–µ–¥—Å—Ç–≤
  TRANSFER  // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–µ—Ä–µ–≤–æ–¥ (–Ω–∞–ø—Ä., —Å/–Ω–∞ –ë–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å)
}

// --- –°—Ç–∞—Ç—É—Å—ã –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π ---
enum TransactionStatus {
  PENDING   // –í –æ–∂–∏–¥–∞–Ω–∏–∏ (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫—á–µ–π–Ω–∞/–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞)
  COMPLETED // –ó–∞–≤–µ—Ä—à–µ–Ω–æ
  FAILED    // –û—Ç–º–µ–Ω–µ–Ω–æ/–ù–µ—É—Å–ø–µ—à–Ω–æ
}

// --- –¢–∏–ø—ã –ë–∞–ª–∞–Ω—Å–∞ ---
enum BalanceType {
  MAIN     // –û—Å–Ω–æ–≤–Ω–æ–π –±–∞–ª–∞–Ω—Å (–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Å—Ç–∞–≤—è—Ç –∏ –≤—ã–≤–æ–¥—è—Ç)
  BONUS    // –ë–æ–Ω—É—Å–Ω—ã–π –±–∞–ª–∞–Ω—Å (—Å —É—Å–ª–æ–≤–∏—è–º–∏ –æ—Ç—ã–≥—Ä—ã—à–∞)
}

// --- –¢–∏–ø—ã –†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã—Ö –°–æ–±—ã—Ç–∏–π ---
enum ReferralEventType {
  BET_COMMISSION // –ö–æ–º–∏—Å—Å–∏—è –∑–∞ —Å—Ç–∞–≤–∫—É —Ä–µ—Ñ–µ—Ä–∞–ª–∞
  DEPOSIT_BONUS  // –ë–æ–Ω—É—Å –∑–∞ –ø–µ—Ä–≤—ã–π –¥–µ–ø–æ–∑–∏—Ç —Ä–µ—Ñ–µ—Ä–∞–ª–∞
}

// ====================================================
// 1. –ê–£–¢–ï–ù–¢–ò–§–ò–ö–ê–¶–ò–Ø –ò –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò (USERS)
// ====================================================

model User {
  id            Int      @id @default(autoincrement())
  telegramId    String   @unique
  username      String?  @unique
  firstName     String?
  lastName      String?
  photoUrl      String?

  isAdmin       Boolean  @default(false)
  isBlocked     Boolean  @default(false)
  
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // --- –†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ ---
  referralCode  String   @unique @default(cuid()) // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –¥–ª—è –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è
  referredById  Int?     // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–∏–≥–ª–∞—Å–∏–ª
  referrer      User?    @relation("UserReferrals", fields: [referredById], references: [id])
  referrals     User[]   @relation("UserReferrals") // –°–ø–∏—Å–æ–∫ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö

  // –°–≤—è–∑–∏
  balances          Balance[]
  transactions      Transaction[]
  bets              Bet[]
  leaderboardEntries LeaderboardEntry[]
  bonuses           UserBonus[]
  commissions       ReferralTransaction[] // –ö–æ–º–∏—Å—Å–∏–∏, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —ç—Ç–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
  referralActions   ReferralTransaction[] @relation("RefereeActions") // –ö–æ–º–∏—Å—Å–∏–∏, –Ω–∞—á–∏—Å–ª–µ–Ω–Ω—ã–µ –∑–∞ –¥–µ–π—Å—Ç–≤–∏—è —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  
  // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: –°–≤—è–∑—å —Å –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–º–∏ —Ç–æ–∫–µ–Ω–∞–º–∏
  authTokens        OneTimeAuthToken[] 
}

// ====================================================
// 2. –§–ò–ù–ê–ù–°–´ –ò –ë–ê–õ–ê–ù–° (BALANCE)
// ====================================================

model Balance {
  id            Int           @id @default(autoincrement())
  
  userId        Int
  user          User          @relation(fields: [userId], references: [id])
  
  tokenId       Int
  token         CryptoToken   @relation(fields: [tokenId], references: [id])
  
  type          BalanceType   @default(MAIN)
  
  // **–ö–†–ò–ü–¢–û-–¢–û–ß–ù–û–°–¢–¨**: Decimal(30, 18) –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—Ä–∏–ø—Ç—ã
  amount        Decimal       @default(0.0) @db.Decimal(30, 18) 
  
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  
  // –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á: —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ç–∏–ø –±–∞–ª–∞–Ω—Å–∞ (MAIN/BONUS) –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–æ–∫–µ–Ω–∞ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  @@unique([userId, tokenId, type]) 
}

// ====================================================
// 3. –¢–†–ê–ù–ó–ê–ö–¶–ò–ò (–í–≤–æ–¥/–í—ã–≤–æ–¥)
// ====================================================

model Transaction {
  id            Int                 @id @default(autoincrement())
  
  userId        Int
  user          User                @relation(fields: [userId], references: [id])
  
  tokenId       Int
  token         CryptoToken         @relation(fields: [tokenId], references: [id])

  type          TransactionType
  status        TransactionStatus   @default(PENDING)
  
  amount        Decimal             @db.Decimal(30, 18)
  
  txHash        String?             @unique // –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ (–∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –≤–∞–∂–µ–Ω)
  walletAddress String?             
  
  createdAt     DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
}

// ====================================================
// 4. –°–¢–ê–í–ö–ò –ò –ò–ì–†–´ (BETS)
// ====================================================

model Bet {
  id            Int         @id @default(autoincrement())
  
  userId        Int
  user          User        @relation(fields: [userId], references: [id])
  
  tokenId       Int 
  token         CryptoToken @relation(fields: [tokenId], references: [id])
  
  gameType      GameType
  
  betAmount     Decimal     @db.Decimal(30, 18)
  payoutAmount  Decimal     @db.Decimal(30, 18)
  netAmount     Decimal     @db.Decimal(30, 18) // –ß–∏—Å—Ç—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç (payout - bet)
  
  payoutRatio   Float
  roundId       String
  details       Json?       
  
  createdAt     DateTime    @default(now())
  
  // –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–∏—Å–∫–∞ —Å—Ç–∞–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ –∏–≥—Ä–µ –∏ –¥–∞—Ç–µ
  @@index([userId, gameType, createdAt])
}

// ====================================================
// 5. –ë–û–ù–£–°–´ –ò –û–¢–´–ì–†–´–® (GAMING LOGIC)
// ====================================================

model Bonus {
  id              Int           @id @default(autoincrement())
  name            String        @unique
  description     String
  // –¢—Ä–µ–±—É–µ–º—ã–π –≤–µ–π–¥–∂–µ—Ä (–Ω–∞–ø—Ä–∏–º–µ—Ä, 40.0)
  wageringMultiplier Float       
  // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –±–æ–Ω—É—Å–∞
  maxBonusAmount  Decimal       @db.Decimal(30, 18)
  
  userBonuses     UserBonus[]
}

model UserBonus {
  id              Int           @id @default(autoincrement())
  
  userId          Int
  user            User          @relation(fields: [userId], references: [id])
  
  bonusId         Int
  bonus           Bonus         @relation(fields: [bonusId], references: [id])
  
  tokenId         Int
  token           CryptoToken   @relation(fields: [tokenId], references: [id])
  
  grantedAmount   Decimal       @db.Decimal(30, 18)
  requiredWager   Decimal       @db.Decimal(30, 18)
  wageredAmount   Decimal       @default(0.0) @db.Decimal(30, 18)
  
  isActive        Boolean       @default(true)
  isCompleted     Boolean       @default(false)
  
  createdAt       DateTime      @default(now())
  expiresAt       DateTime?
  
  @@unique([userId, bonusId, tokenId])
}

// ====================================================
// 6. –¢–ê–ë–õ–ò–¶–ê –õ–ò–î–ï–†–û–í (LEADERBOARD)
// ====================================================

model LeaderboardEntry {
  id            Int       @id @default(autoincrement())
  
  userId        Int       
  user          User      @relation(fields: [userId], references: [id])
  
  tokenId       Int?      
  token         CryptoToken? @relation(fields: [tokenId], references: [id])
  
  metric        String    // "Max_Win", "Total_Wagered" –∏ —Ç.–¥.
  score         Decimal   @db.Decimal(30, 18)
  period        String    // "Daily", "Weekly", "AllTime"
  
  updatedAt     DateTime  @updatedAt
  
  @@unique([userId, metric, period, tokenId])
  // –ò–Ω–¥–µ–∫—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–π—Ç–∏–Ω–≥–∞
  @@index([metric, period, score(sort: Desc)])
}

// ====================================================
// 7. –†–ï–§–ï–†–ê–õ–¨–ù–ê–Ø –°–ò–°–¢–ï–ú–ê (REFERRAL TRANSACTIONS)
// ====================================================

model ReferralTransaction {
  id              Int                 @id @default(autoincrement())
  
  // –ö—Ç–æ –ø–æ–ª—É—á–∏–ª –∫–æ–º–∏—Å—Å–∏—é (—Ä–µ—Ñ–µ—Ä–µ—Ä)
  referrerId      Int
  referrer        User                @relation(fields: [referrerId], references: [id])

  // –ö—Ç–æ —Å–æ–≤–µ—Ä—à–∏–ª –¥–µ–π—Å—Ç–≤–∏–µ (—Ä–µ—Ñ–µ—Ä–∞–ª)
  refereeId       Int
  referee         User                @relation("RefereeActions", fields: [refereeId], references: [id])

  tokenId         Int
  token           CryptoToken         @relation(fields: [tokenId], references: [id])

  eventType       ReferralEventType   
  
  amount          Decimal             @db.Decimal(30, 18) 
  
  // ID —Å—Ç–∞–≤–∫–∏ –∏–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏, –∑–∞ –∫–æ—Ç–æ—Ä—É—é –Ω–∞—á–∏—Å–ª–µ–Ω–∞ –∫–æ–º–∏—Å—Å–∏—è (–¥–ª—è –∞—É–¥–∏—Ç–∞)
  sourceEntityId  Int                 
  sourceEntityType String             // –ù–∞–ø—Ä–∏–º–µ—Ä, "Bet" –∏–ª–∏ "Transaction"
  
  createdAt       DateTime            @default(now())
  
  @@index([referrerId, createdAt]) 
}

// ====================================================
// 8. –û–î–ù–û–†–ê–ó–û–í–´–ï –¢–û–ö–ï–ù–´ (ONE-TIME AUTHS)
// ====================================================
model OneTimeAuthToken {
  id              Int      @id @default(autoincrement())
  
  token           String   @unique
  
  // –ö –∫–∞–∫–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ—Ç–Ω–æ—Å–∏—Ç—Å—è
  userId          Int
  user            User     @relation(fields: [userId], references: [id]) // –°–≤—è–∑—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
  
  createdAt       DateTime @default(now())
  
  // –í—Ä–µ–º—è –∏—Å—Ç–µ—á–µ–Ω–∏—è (–æ—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–æ–µ)
  expiresAt       DateTime 
  
  // –ë—ã–ª –ª–∏ —Ç–æ–∫–µ–Ω –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω (–¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è)
  isUsed          Boolean  @default(false)
  
  @@index([token, expiresAt])
}